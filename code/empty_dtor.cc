// testing if the user-declared destructor is in need
// when user-declared destructor is defined in Base class

// if no user-declared destructor in Base,
// no destructor-code will be generated by the compiler and so is Class Dog

#include <iostream>
#include <unistd.h>

using namespace std;
class Base {
  public:
    /*
    ~Base() {
      cout << "~Base()" << endl;
    };
    */
};

class Dog : Base {
  public:
    Dog() {
      cout << "Dog()" << endl;
    }
};
int main() {
  Dog dog;
  return 0;
} 
